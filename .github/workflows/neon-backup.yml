name: Weekly Neon Branch Backup
on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

env:
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Create new branch backup
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="backup-${TIMESTAMP}"

          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            "https://console.neon.tech/api/v2/projects/${NEON_PROJECT_ID}/branches" \
            -H "Authorization: Bearer ${NEON_API_KEY}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d "{\"branch\": {\"name\": \"${BRANCH_NAME}\"}}")

          HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n-1)

          echo "Response body: $BODY"
          echo "Status code: $HTTP_STATUS"

          if [ "$HTTP_STATUS" -ne 201 ] && [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Failed to create branch"
            exit 1
          fi

      - name: List and clean old branches
        run: |
          BRANCHES_RESPONSE=$(curl -s \
            "https://console.neon.tech/api/v2/projects/${NEON_PROJECT_ID}/branches" \
            -H "Authorization: Bearer ${NEON_API_KEY}" \
            -H "Accept: application/json")

          echo "Current branches:"
          echo "$BRANCHES_RESPONSE" | jq '.'

          # Rest of your cleanup code...
